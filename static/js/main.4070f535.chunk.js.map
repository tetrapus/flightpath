{"version":3,"sources":["Connectors.tsx","phabricator.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["lineRenderers","curvy","ctx","from","to","color","stroke","y","temp","tangentX","x","lineWidth","strokeStyle","beginPath","moveTo","Math","abs","lineTo","arcTo","angular","lineStyles","cumulativeOffset","element","top","left","offsetTop","offsetLeft","parentNode","Connectors","nodes","dimensions","canvasRef","useRef","useEffect","canvas","current","getContext","fillStyle","fillRect","width","height","lines","reverse","forEach","node","requires","elem","document","querySelector","id","map","dependency","depCoords","offsetWidth","offsetHeight","targetCoords","getAttribute","push","lineSets","i","lineSet","filter","length","line","connectAll","ref","phabricator","endpoint","data","params","phabricatorApiKey","objToParams","Promise","resolve","corsBypass","method","url","phabricatorURL","headers","anonymous","Object","entries","key","value","encodeURIComponent","join","onload","xhr","console","log","responseText","JSON","parse","obj","path","assign","flat","generateNodeDepth","currentNode","undefined","depth","requiredNodes","requiredNodeId","children","active","closed","required","max","n","reduce","a","b","some","App","window","innerWidth","columns","floor","useState","editMode","setEditMode","listener","event","ctrlKey","metaKey","mode","addEventListener","removeEventListener","viewerRef","panzoom","createPanZoom","maxZoom","minZoom","initialX","initialY","initialZoom","bounds","autocenter","dispose","rootId","setRootId","setNodes","randomiseRoadmap","queryKey","response","tasks","result","selected","random","phid","setRoadmap","constraints","ids","slice","location","hash","setTimeout","fetchNodes","toBeLoaded","phids","values","child","find","title","owner","ownerPHID","dependsOnTaskPHIDs","isClosed","includes","users","setUsers","unknowns","fromEntries","user","fetchUsers","allocated","nodeIndex","requiredBy","dependencyId","generateNodeParents","compare","v1","v2","unallocated","keys","sort","n1","n2","middleColumn","initialCandidates","allocation","distance","candidates","reset","Error","freeSlots","candidate","parentAllocation","taken","neighbours","weight","link","free","Array","score","d","arr","predicate","trues","falses","bisect","descendents","nondescendents","innerHeight","style","position","transform","display","flexDirection","alignItems","textAlign","src","alt","onClick","idx","fontSize","data-id","data-active","data-assigned","minWidth","minHeight","borderColor","borderRadius","borderWidth","borderStyle","margin","visibility","image","background","backgroundSize","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4070f535.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Node } from \"./Node\";\n\ninterface Coord {\n  x: number;\n  y: number;\n}\n\ntype Line = [CanvasRenderingContext2D, Coord, Coord, string, number];\n\nconst lineRenderers = {\n  curvy: (\n    ctx: CanvasRenderingContext2D,\n    from: Coord,\n    to: Coord,\n    color: string,\n    stroke: number\n  ) => {\n    if (from.y > to.y) {\n      var temp = from;\n      from = to;\n      to = temp;\n    }\n\n    const radius = 6;\n    const tangentX = from.x > to.x ? -radius : radius;\n    ctx.lineWidth = stroke;\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(from.x, from.y);\n    if (Math.abs(from.y - to.y) > 8 && Math.abs(from.x - to.x) > 8) {\n      ctx.lineTo(from.x, (from.y + to.y) / 2 - radius);\n      ctx.arcTo(\n        from.x,\n        (from.y + to.y) / 2,\n        from.x + tangentX,\n        (from.y + to.y) / 2,\n        radius\n      );\n      ctx.lineTo(to.x - tangentX, (from.y + to.y) / 2);\n      ctx.arcTo(\n        to.x,\n        (from.y + to.y) / 2,\n        to.x,\n        (from.y + to.y) / 2 + radius,\n        radius\n      );\n      ctx.stroke();\n    }\n    ctx.lineTo(to.x, to.y);\n    ctx.stroke();\n  },\n  angular: (\n    ctx: CanvasRenderingContext2D,\n    from: Coord,\n    to: Coord,\n    color: string,\n    stroke: number\n  ) => {\n    if (from.y < to.y) {\n      var temp = from;\n      from = to;\n      to = temp;\n    }\n\n    ctx.lineWidth = stroke;\n    ctx.strokeStyle = color;\n    ctx.beginPath();\n    ctx.moveTo(from.x, from.y);\n    ctx.lineTo(from.x, from.y + (1 * (to.y - from.y)) / 4);\n    ctx.lineTo(to.x, from.y + (3 * (to.y - from.y)) / 4);\n    ctx.lineTo(to.x, to.y);\n    ctx.stroke();\n  },\n};\n\nconst lineStyles = {\n  pink: (ctx: CanvasRenderingContext2D, from: Coord, to: Coord): Line[] => {\n    return [\n      [ctx, from, to, \"#270000\", 10],\n      [ctx, from, to, \"#d90082\", 3],\n      [ctx, from, to, \"white\", 1.5],\n    ];\n  },\n  grey: (ctx: CanvasRenderingContext2D, from: Coord, to: Coord): Line[] => {\n    return [\n      [ctx, from, to, \"#080808\", 10],\n      [ctx, from, to, \"#222\", 3],\n      [ctx, from, to, \"#444\", 1],\n    ];\n  },\n  white: (ctx: CanvasRenderingContext2D, from: Coord, to: Coord): Line[] => {\n    return [\n      [ctx, from, to, \"#111\", 10],\n      [ctx, from, to, \"#666\", 3],\n      [ctx, from, to, \"#fff\", 1],\n    ];\n  },\n};\n\nfunction connectAll(lineSets: Line[][]) {\n  let i = 0;\n  while (true) {\n    const lines = lineSets.map((lineSet) => lineSet[i]).filter((x) => x);\n    if (!lines.length) {\n      break;\n    }\n    lines.forEach((line) => lineRenderers.angular(...line));\n    i += 1;\n  }\n}\n\nvar cumulativeOffset = function (element: HTMLElement | null) {\n  var top = 0,\n    left = 0;\n  while (element) {\n    top += element.offsetTop || 0;\n    left += element.offsetLeft || 0;\n    element = element.parentNode as HTMLElement | null;\n  }\n\n  return { x: left, y: top };\n};\n\nexport function Connectors({\n  nodes,\n  dimensions,\n}: {\n  nodes: Node[];\n  dimensions: Coord;\n}) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        ctx.fillStyle = \"black\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        let lines: Line[][] = [];\n\n        nodes.reverse().forEach((node) => {\n          if (!node.requires) {\n            return;\n          }\n          const elem = document.querySelector(\n            `[data-id=\"${node.id}\"]`\n          ) as HTMLElement;\n          const dependencies = node.requires.map(\n            (dependency) =>\n              document.querySelector(\n                `[data-id=\"${dependency}\"]`\n              ) as HTMLElement | null\n          );\n          dependencies.forEach((dependency) => {\n            if (elem && dependency) {\n              const depCoords = cumulativeOffset(elem);\n              depCoords.x = depCoords.x + dependency.offsetWidth / 2;\n              depCoords.y = depCoords.y + dependency.offsetHeight / 2;\n              const targetCoords = cumulativeOffset(dependency);\n              targetCoords.x += elem.offsetWidth / 2;\n              targetCoords.y += elem.offsetHeight / 2;\n              if (dependency.getAttribute(\"data-active\") === \"true\") {\n                lines.push(lineStyles.pink(ctx, targetCoords, depCoords));\n              } else if (\n                elem.getAttribute(\"data-active\") === \"true\" &&\n                dependency.getAttribute(\"data-assigned\") === \"true\"\n              ) {\n                lines.push(lineStyles.white(ctx, targetCoords, depCoords));\n              } else {\n                lines.push(lineStyles.grey(ctx, targetCoords, depCoords));\n              }\n            }\n          });\n        });\n        connectAll(lines);\n      }\n    }\n  }, [canvasRef, nodes]);\n\n  return (\n    <>\n      <canvas\n        ref={canvasRef}\n        width={`${dimensions.x}px`}\n        height={`${dimensions.y}px`}\n      ></canvas>\n      <svg width={`${dimensions.x}px`} height={`${dimensions.y}px`}></svg>\n    </>\n  );\n}\n","declare global {\n  interface Document {\n    corsBypass: any;\n    phabricatorApiKey: string;\n    phabricatorURL: string;\n  }\n}\n\ntype QueryEndpoint<T> = {\n  result: { [phid: string]: T };\n};\n\ntype SearchEndpoint<T> = {\n  result: { data: T[] };\n};\n\nexport interface User {\n  phid: \"string\";\n  image: \"string\";\n}\n\nexport type PhabricatorEndpoint = {\n  \"user.query\": QueryEndpoint<User>;\n  \"maniphest.search\": SearchEndpoint<{ phid: string }>;\n  \"maniphest.query\": QueryEndpoint<{\n    title: string;\n    phid: string;\n    ownerPHID?: string;\n    dependsOnTaskPHIDs?: string[];\n    isClosed: boolean;\n  }>;\n};\n\nexport function phabricator<T extends keyof PhabricatorEndpoint>(\n  endpoint: T,\n  data: any\n): Promise<PhabricatorEndpoint[T]> {\n  const params = {\n    \"api.token\": document.phabricatorApiKey,\n    ...objToParams(data),\n  };\n  return new Promise((resolve) => {\n    document?.corsBypass({\n      method: \"POST\",\n      url: `https://${document.phabricatorURL}/api/${endpoint}`,\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      anonymous: true,\n      data: Object.entries(params)\n        .map(\n          ([key, value]) =>\n            `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n        )\n        .join(\"&\"),\n      onload: (xhr: any) => {\n        console.log(xhr.responseText);\n        resolve(JSON.parse(xhr.responseText));\n      },\n    });\n  });\n}\n\nfunction objToParams(obj: any, path: string = \"\"): { [key: string]: string } {\n  if (typeof obj === \"object\") {\n    return Object.assign(\n      {},\n      ...Object.entries(obj)\n        .map(([key, value]) =>\n          objToParams(value, path ? `${path}[${key}]` : key)\n        )\n        .flat()\n    );\n  } else {\n    return { [path]: obj };\n  }\n}\n","import { Connectors } from \"./Connectors\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { phabricator, User } from \"./phabricator\";\nimport { Node } from \"./Node\";\nimport { AnnotatedNode } from \"./AnnotatedNode\";\nimport { Allocation } from \"./Allocation\";\nimport createPanZoom from \"panzoom\";\n\nfunction bisect<T>(arr: T[], predicate: (elem: T) => boolean) {\n  const trues: T[] = [];\n  const falses: T[] = [];\n  arr.forEach((elem) => {\n    const result = predicate(elem);\n    if (result) {\n      trues.push(elem);\n    } else {\n      falses.push(elem);\n    }\n  });\n  return [trues, falses];\n}\n\nfunction generateNodeParents(\n  nodes: Node[],\n  nodeIndex: { [id: string]: AnnotatedNode }\n) {\n  nodes.forEach((node) => {\n    node.requires.forEach((dependencyId) =>\n      nodeIndex[(dependencyId as unknown) as string]?.requiredBy?.push(node.id)\n    );\n  });\n}\n\nfunction generateNodeDepth(\n  currentNode: AnnotatedNode,\n  nodes: { [id: string]: AnnotatedNode }\n) {\n  if (currentNode.depth !== undefined) {\n    return;\n  }\n\n  const requiredNodes = currentNode.requires\n    .map((requiredNodeId) => nodes[requiredNodeId])\n    .filter((x) => x);\n\n  if (!requiredNodes.length) {\n    currentNode.depth = 0;\n    currentNode.children = 0;\n    currentNode.active = currentNode.closed;\n    return;\n  }\n\n  requiredNodes.forEach((required) => generateNodeDepth(required, nodes));\n  currentNode.depth =\n    Math.max(...requiredNodes.map((n) => n.depth as number)) + 1;\n  // this is wrong, but good enough to break ties\n  currentNode.children = requiredNodes\n    .map((n) => n.children as number)\n    .reduce((a, b) => a + b, requiredNodes.length);\n  currentNode.active = requiredNodes.some((node) => node.active);\n}\n\nfunction App() {\n  let dimensions = { x: Math.max(window.innerWidth, 2500), y: 2000 };\n  const colsize = 180;\n  let columns = Math.floor(dimensions.x / colsize) - 1;\n  if (columns % 2 === 0) {\n    columns += 1;\n  }\n\n  const [editMode, setEditMode] = useState<boolean>(false);\n  useEffect(() => {\n    const listener = (event: KeyboardEvent) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === \"e\") {\n        setEditMode((mode) => !mode);\n      }\n    };\n    document.addEventListener(\"keydown\", listener);\n    return () => document.removeEventListener(\"keydown\", listener);\n  }, []);\n\n  const viewerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (viewerRef.current) {\n      const panzoom = createPanZoom(viewerRef.current, {\n        maxZoom: 1,\n        minZoom: 0.1,\n        initialX: ((dimensions.x - window.innerWidth) / 2) * 10,\n        initialY: 0,\n        initialZoom: 1,\n        bounds: true,\n        autocenter: true,\n      });\n      return () => panzoom.dispose();\n    }\n  }, [dimensions.x]);\n\n  const [rootId, setRootId] = useState<string | undefined>();\n  const [nodes, setNodes] = useState<Node[]>([]);\n\n  const randomiseRoadmap = async () => {\n    setRootId(undefined);\n    const response = await phabricator(\"maniphest.search\", {\n      queryKey: \"bYI2MjPZzE5c\",\n    });\n    const tasks = response.result.data;\n    const selected = tasks[Math.floor(Math.random() * tasks.length)];\n    setNodes([]);\n    setRootId(selected.phid);\n  };\n\n  const setRoadmap = async (id: string) => {\n    setRootId(undefined);\n    const response = await phabricator(\"maniphest.search\", {\n      constraints: {\n        ids: [id.slice(2)],\n      },\n    });\n    const tasks = response.result.data;\n    const selected = tasks[Math.floor(Math.random() * tasks.length)];\n    setNodes([]);\n    setRootId(selected.phid);\n  };\n\n  useEffect(() => {\n    if (window.location.hash) {\n      setTimeout(() => setRoadmap(window.location.hash), 1000);\n    } else {\n      setTimeout(randomiseRoadmap, 1000);\n    }\n    document.addEventListener(\"hashchange\", () =>\n      setRoadmap(window.location.hash)\n    );\n  }, []);\n\n  useEffect(() => {\n    async function fetchNodes(toBeLoaded: string[]) {\n      const response = await phabricator(\"maniphest.query\", {\n        phids: toBeLoaded,\n      });\n      const children = response.result;\n      setNodes((nodes) => [\n        ...nodes,\n        ...Object.values(children)\n          .filter((child) => !nodes.find((node) => node.id === child.phid))\n          .map((child) => ({\n            title: children[child.phid].title,\n            id: child.phid,\n            owner: child.ownerPHID,\n            requires: child.dependsOnTaskPHIDs || [],\n            closed: child.isClosed,\n          })),\n      ]);\n    }\n    if (!rootId) {\n      return;\n    }\n    if (nodes.length) {\n      const toBeLoaded = [\n        ...nodes.map((node) => node.requires).flat(),\n        rootId,\n      ].filter((phids) => !nodes.find((node) => phids.includes(node.id)));\n\n      if (!toBeLoaded.length) {\n        return;\n      }\n      fetchNodes(toBeLoaded);\n    } else {\n      if (!document.corsBypass) {\n        setTimeout(() => fetchNodes([rootId]), 1000);\n      } else {\n        fetchNodes([rootId]);\n      }\n    }\n  }, [nodes, rootId]);\n\n  const [users, setUsers] = useState<{ [phid: string]: User }>({});\n  useEffect(() => {\n    async function fetchUsers(unknowns: string[]) {\n      const response = await phabricator(\"user.query\", {\n        phids: unknowns,\n      });\n      setUsers((users) => ({\n        ...users,\n        ...Object.fromEntries(\n          Object.values(response.result).map((user) => [user.phid, user])\n        ),\n      }));\n    }\n    const unknowns = nodes\n      .map((node) => node.owner)\n      .filter((x): x is string => !!(x && !users[x]));\n    if (unknowns.length) {\n      fetchUsers(unknowns);\n    }\n  }, [nodes, users]);\n\n  /**\n   * LAYOUTING ALGORITHM\n   * Find the longest unallocated parent\n   * Place them in their preferred node.\n   * Adjust parent node horizontally to minimise distance.\n   * Allocate all descendents first\n   * Repeat\n   */\n  let allocated: Allocation[] = [];\n  const nodeIndex: {\n    [id: string]: AnnotatedNode;\n  } = Object.fromEntries(\n    nodes.map((node) => [node.id, { ...node, requiredBy: [] }])\n  );\n  if (nodes.length && rootId && nodeIndex[rootId]) {\n    // Setup\n    generateNodeParents(nodes, nodeIndex);\n    generateNodeDepth(nodeIndex[rootId], nodeIndex);\n\n    const compare = (v1: number | undefined, v2: number | undefined) => {\n      if (v1 === undefined || v2 === undefined) {\n        return 0;\n      }\n      return v2 - v1;\n    };\n\n    const compareNodes = (n1: AnnotatedNode, n2: AnnotatedNode) =>\n      compare(n1.depth, n2.depth) ||\n      compare(n1.children, n2.children) ||\n      compare(+!!n1.active, +!!n2.active);\n\n    // For simplicity, allocate the first node to the middle of row 0 immediately.\n    let unallocated = Object.keys(nodeIndex)\n      .filter((x) => x !== rootId)\n      .map((id) => nodeIndex[id])\n      .sort(compareNodes);\n    const middleColumn = Math.floor(columns / 2);\n    allocated = [{ node: nodeIndex[rootId], y: 0, x: middleColumn }];\n    // Allocate each unallocated node\n    while (unallocated.length) {\n      const node = unallocated[0];\n      console.log({ node });\n      unallocated = unallocated.slice(1);\n\n      // The best position for a node is right under a parent.\n      let initialCandidates = allocated.filter((allocation) =>\n        node.requiredBy.includes(allocation.node.id)\n      );\n      // Find the closest free spot in the next row under a parent.\n      let distance = 0;\n      let candidates = initialCandidates.map((allocation) => ({\n        ...allocation,\n        y: allocation.y + 1,\n        reset: 0,\n        initialX: allocation.x,\n      }));\n      while (true) {\n        if (!candidates.length) {\n          throw new Error();\n        }\n        const freeSlots = candidates.filter(\n          (allocation) =>\n            !allocated.find(\n              (candidate) =>\n                candidate.x === allocation.x && candidate.y === allocation.y\n            )\n        );\n        if (freeSlots.length) {\n          allocated.push({ x: freeSlots[0].x, y: freeSlots[0].y, node });\n          /**\n           * We've placed a node! Now let's readjust a little bit - let's adjust the parent\n           * to minimize their link distance (unless it's the parent node!)\n           */\n          if (freeSlots[0].node.id !== rootId) {\n            const parentAllocation = allocated.find(\n              (allocation) => allocation.node.id === freeSlots[0].node.id\n            ) as Allocation;\n            // We only want to adjust the parent x!\n            const taken = allocated.filter(\n              (allocation) => parentAllocation.y === allocation.y\n            );\n            const neighbours = [\n              ...parentAllocation.node.requiredBy.map((id) => ({\n                id,\n                weight: 0.3,\n              })),\n              ...parentAllocation.node.requires.map((id) => ({\n                id,\n                weight: 1,\n              })),\n            ]\n              .map((link) => ({\n                node: allocated.find((a) => a.node.id === link.id),\n                weight: link.weight,\n              }))\n              .filter((x) => x.node);\n\n            const free = [\n              ...Array.from(new Array(columns).keys()).filter(\n                (x) => !taken.some((allocation) => allocation.x === x)\n              ),\n              parentAllocation.x,\n            ]\n              .map((x) => ({\n                value: x,\n                score: neighbours\n                  .map((a) => Math.abs((a.node?.x || 0) - x) * a.weight)\n                  .reduce((a, b) => a + b, 0),\n              }))\n              .sort((a, b) => a.score - b.score);\n            console.log(free);\n            parentAllocation.x = free[0].value;\n          }\n          break;\n        }\n        distance++;\n\n        candidates = candidates.map((allocation) => {\n          const d = distance - allocation.reset;\n          let x = allocation.x + (d % 2 ? d : -d);\n          let y = allocation.y;\n          let reset = allocation.reset;\n          if (x < 0 || x >= columns) {\n            reset = distance - 1;\n            y++;\n            x = allocation.initialX + 1;\n            if (x >= columns) {\n              reset++;\n              x -= 2;\n            }\n          }\n          return {\n            ...allocation,\n            x,\n            y,\n            reset,\n          };\n        });\n      }\n      // Now we prioritise the subset that is a descendent of this node\n      const [descendents, nondescendents] = bisect(unallocated, (n) =>\n        node.requires.includes(n.id)\n      );\n      unallocated = [...descendents, ...nondescendents];\n    }\n  }\n\n  dimensions.y = Math.max(\n    Math.max(...allocated.map((allocation) => allocation.y)) * 150 + 235,\n    window.innerHeight\n  );\n\n  return (\n    <div style={{ color: \"white\" }} ref={viewerRef}>\n      <Connectors nodes={nodes} dimensions={dimensions} />\n      <div\n        style={{\n          position: \"absolute\",\n          top: 16,\n          left: dimensions.x / 2,\n          transform: \"translateX(-50%)\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n        }}\n      >\n        <img\n          src={\n            nodes.length && rootId\n              ? \"./freelancer-neon.svg\"\n              : \"./freelancer-neon-off.svg\"\n          }\n          alt=\"Freelancer Enterprise\"\n          onClick={() => {\n            if (editMode) {\n            } else {\n              randomiseRoadmap();\n            }\n          }}\n        ></img>\n        <div>{rootId ? nodeIndex[rootId]?.title : null}</div>\n      </div>\n      {allocated.map(({ node, x, y }, idx) => (\n        <div\n          style={{\n            position: \"absolute\",\n            left: (dimensions.x - colsize * columns) / 2 + (x + 0.5) * colsize,\n            top: 170 + 150 * y,\n            fontSize: 12,\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            data-id={node.id}\n            data-active={node.active}\n            data-assigned={!!node.owner}\n            style={{\n              minWidth: 32,\n              minHeight: 32,\n              borderColor: \"#fa5f9b\",\n              borderRadius: 18,\n              borderWidth: 2,\n              borderStyle: \"solid\",\n              margin: \"auto\",\n              visibility: idx ? \"initial\" : \"hidden\",\n              ...(node.active\n                ? {}\n                : { filter: \"grayscale(1) brightness(0.6)\" }),\n              ...(node.owner && users[node.owner] && users[node.owner].image\n                ? {\n                    background: `url(${users[node.owner].image})`,\n                    backgroundSize: \"cover\",\n                  }\n                : {\n                    background: \"black\",\n                  }),\n            }}\n          ></div>\n          {node.id !== rootId ? (\n            <div\n              style={{\n                background: \"rgba(0, 0, 0, 0.3)\",\n                margin: 6,\n                maxWidth: 100,\n                textAlign: \"center\",\n              }}\n            >\n              {node.title}\n            </div>\n          ) : null}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}